Цапко Александр Юрьевич

a.tsapko@urancompany.com

1. Сессии, кеши, сложные формы

Написать простейшую форму логина по емейлу/паролю с обработкой данных. Сделать и вывод формы, и ее обработку, и запись в сессию успешности логина и перенаправление на внутреннюю часть сайта - в одном файле. “Правильной парой” для примера будет только test@example.com и пароль testtest (т.е. не надо базы данных реальной). Учесть защиту от “силового подбора” пароля с помощью любого кеша (т.е. если на один емейл идут разные запросы с разными паролями даже с разных айпи - блокировать эти боты еще до “подключения к базе”), выдавать разные формы подтверждения “правдивости” в зависимости от количество неудачных попыток (капча, смс, емейл подтверждение).



2. Трай, кетч, простые классы 

Напишите класс для работы с файловым кешем, где Cache::put($ident, $value) сохраняет значение, а Cache::get($ident) возвращает. Учитывайте что папка кеша может быть недоступна (возвращать ошибку), запись может оборваться, чтение может давать битое значение (записали массив, файл “покорежился”, массив стал не массивом). Все варианты записи (скаляр, массив, переменная) сделать с тестами.



3. Трейты, интерфейсы, наследование классов

Напишите два класса для логина пользователя, при одном сделать стандартный логин по паре емейл/пароль, при втором - по паре мобильный и отправленная смс. Сделать возможность использовать разные “провайдеры” для смс.


4. Code review
<?php
/*
 * опишите что этот запрос делает, и можно ли его улучшить
 * заметьте - это Postgresql - предположительно не знакомая вам база данных и вам нужно почитать документацию прежде чем ответить
 */

$sql = 'UPDATE reviews AS r SET (status, chtime)=(1, NOW())

        WHERE (SELECT sub.match

        FROM (SELECT (reviews.*)=(r.*) AS match

        FROM items AS i

        LEFT JOIN reviews ON reviews.id_item = i.id 

        WHERE item.id=222) AS sub)';